{"version":3,"file":"static/js/98.b3b0c59d.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { sync } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => sync.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nfunction calculateDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxDuration ? Infinity : duration;\n}\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calculateDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        playState = \"running\";\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime) {\n            // TODO When implementing play/pause, check WAAPI\n            // logic around finished animations\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calculateDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { sync } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    const safeCancel = () => {\n        sync.update(() => animation.cancel());\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an wildcard keyframes are hydrated by the origin.\n         */\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] === null) {\n                target[i] = i === 0 ? origin : target[i - 1];\n            }\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.10.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                /**\n                 * If the parent target isn't up-to-date, force it to update.\n                 * This is an unfortunate de-optimisation as it means any updating relative\n                 * projection will cause all the relative parents to recalculate back\n                 * up the tree.\n                 */\n                if (this.relativeParent.resolvedRelativeTargetAt !==\n                    frameData.timestamp) {\n                    this.relativeParent.resolveTargetDelta(true);\n                }\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    // keyframes: [0, animationTarget],÷\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.10.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.10.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","React","PopChild","_ref","id","useId","ref","useInsertionEffect","_size$current","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","concat","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","_step","_iterator","_createForOfIteratorHelper","values","s","n","done","err","e","f","register","delete","undefined","forEach","_","PresenceContext","Map","getChildKey","child","AnimatePresence","_ref$initial","exitBeforeEnter","_ref$presenceAffectsL","_ref$mode","invariant","_useForceUpdate","_useState","useState","_useState2","_slicedToArray","forcedRenderCount","setForcedRenderCount","forceRender","useCallback","sync","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","callback","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","updateChildLookup","clear","useEffect","map","_toConsumableArray","presentKeys","targetKeys","numPresent","length","i","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","createContext","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","cancel","index","process","createRenderStep","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","requestAnimationFrame","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","_objectWithoutProperties","excluded","sourceKeys","keys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","numbers","tokenised","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","types","decay","tween","calculateDuration","generator","Infinity","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZero","getZeroUnit","potentialUnitType","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isZeroValueString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","prevIsPresent","prevPresenceContext","exitAnimation","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getComputedStyle","getPropertyValue","resolveCSSVariables","obj","TypeError","_objectDestructuringEmpty","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","resolvedRelativeTargetAt","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","Reflect","bind","property","receiver","base","object","getPrototypeOf","desc","getOwnPropertyDescriptor","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig","any","useLayoutEffect"],"sourceRoot":""}