{"version":3,"file":"static/js/639.5e8b5087.chunk.js","mappings":"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","sources":["Components/Pages/CreatePostPage/EditorToolbar.js","Components/Pages/CreatePostPage/index.js","Components/SharedComponents/Button/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { Quill } from \"react-quill\";\r\n\r\n// Custom Undo button icon component for Quill editor. You can import it directly\r\n// from 'quill/assets/icons/undo.svg' but I found that a number of loaders do not\r\n// handle them correctly\r\nconst CustomUndo = () => (\r\n  <svg viewBox=\"0 0 18 18\">\r\n    <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\r\n    <path\r\n      className=\"ql-stroke\"\r\n      d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\r\n    />\r\n  </svg>\r\n);\r\n\r\n// Redo button icon component for Quill editor\r\nconst CustomRedo = () => (\r\n  <svg viewBox=\"0 0 18 18\">\r\n    <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\r\n    <path\r\n      className=\"ql-stroke\"\r\n      d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\r\n    />\r\n  </svg>\r\n);\r\n\r\n// Undo and redo functions for Custom Toolbar\r\nfunction undoChange() {\r\n  this.quill.history.undo();\r\n}\r\nfunction redoChange() {\r\n  this.quill.history.redo();\r\n}\r\n\r\n// Add sizes to whitelist and register them\r\nconst Size = Quill.import(\"formats/size\");\r\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\r\nQuill.register(Size, true);\r\n\r\n// Add fonts to whitelist and register them\r\nconst Font = Quill.import(\"formats/font\");\r\nFont.whitelist = [\r\n  \"arial\",\r\n  \"comic-sans\",\r\n  \"courier-new\",\r\n  \"georgia\",\r\n  \"helvetica\",\r\n  \"lucida\"\r\n];\r\nQuill.register(Font, true);\r\n\r\n// Modules object for setting up the Quill editor\r\nexport const modules = {\r\n  toolbar: {\r\n    container: \"#toolbar\",\r\n    handlers: {\r\n      undo: undoChange,\r\n      redo: redoChange\r\n    }\r\n  },\r\n  history: {\r\n    delay: 500,\r\n    maxStack: 100,\r\n    userOnly: true\r\n  }\r\n};\r\n\r\n// Formats objects for setting up the Quill editor\r\nexport const formats = [\r\n  \"header\",\r\n  \"font\",\r\n  \"size\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"align\",\r\n  \"strike\",\r\n  \"script\",\r\n  \"blockquote\",\r\n  \"background\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n  \"color\",\r\n  \"code-block\"\r\n];\r\n\r\n// Quill Toolbar component\r\nexport const QuillToolbar = () => (\r\n  <div id=\"toolbar\">\r\n    <span className=\"ql-formats\">\r\n      <select className=\"ql-font\" defaultValue=\"arial\">\r\n        <option value=\"arial\">Arial</option>\r\n        <option value=\"comic-sans\">Comic Sans</option>\r\n        <option value=\"courier-new\">Courier New</option>\r\n        <option value=\"georgia\">Georgia</option>\r\n        <option value=\"helvetica\">Helvetica</option>\r\n        <option value=\"lucida\">Lucida</option>\r\n      </select>\r\n      <select className=\"ql-size\" defaultValue=\"medium\">\r\n        <option value=\"extra-small\">Size 1</option>\r\n        <option value=\"small\">Size 2</option>\r\n        <option value=\"medium\">Size 3</option>\r\n        <option value=\"large\">Size 4</option>\r\n      </select>\r\n      <select className=\"ql-header\" defaultValue=\"3\">\r\n        <option value=\"1\">Heading</option>\r\n        <option value=\"2\">Subheading</option>\r\n        <option value=\"3\">Normal</option>\r\n      </select>\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-bold\" />\r\n      <button className=\"ql-italic\" />\r\n      <button className=\"ql-underline\" />\r\n      <button className=\"ql-strike\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-list\" value=\"ordered\" />\r\n      <button className=\"ql-list\" value=\"bullet\" />\r\n      <button className=\"ql-indent\" value=\"-1\" />\r\n      <button className=\"ql-indent\" value=\"+1\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-script\" value=\"super\" />\r\n      <button className=\"ql-script\" value=\"sub\" />\r\n      <button className=\"ql-blockquote\" />\r\n      <button className=\"ql-direction\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <select className=\"ql-align\" />\r\n      <select className=\"ql-color\" />\r\n      <select className=\"ql-background\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-link\" />\r\n      <button className=\"ql-image\" />\r\n      <button className=\"ql-video\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-formula\" />\r\n      <button className=\"ql-code-block\" />\r\n      <button className=\"ql-clean\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-undo\">\r\n        <CustomUndo />\r\n      </button>\r\n      <button className=\"ql-redo\">\r\n        <CustomRedo />\r\n      </button>\r\n    </span>\r\n  </div>\r\n);\r\n\r\nexport default QuillToolbar;","import ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport EditorToolbar, { modules, formats } from \"./EditorToolbar\";\r\nimport './EditorPost.css';\r\nimport {useState} from 'react';\r\nimport {Navigate} from 'react-router-dom';\r\nimport Button from '../../SharedComponents/Button/index';\r\n\r\n\r\nexport default function CreatePost() {\r\n  const [title,setTitle] = useState('');\r\n  const [summary,setSummary] = useState('');\r\n  const [content,setContent] = useState('');\r\n  const [files, setFiles] = useState('');\r\n  const [icon, setIcon] = useState('Unity');\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const handleChangeLanguague = (event) => {\r\n    setIcon(event.target.value);\r\n  };\r\n  async function createNewPost(ev) {\r\n    const data = new FormData();\r\n    data.set('title', title);\r\n    data.set('summary', summary);\r\n    data.set('content', content);\r\n    data.set('file', files[0]);\r\n    data.set('color','');\r\n    data.set('icon',icon);\r\n    ev.preventDefault();\r\n\r\n    const response = await fetch('http://localhost:4000/post', {\r\n      method: 'POST',\r\n      body: data,\r\n      credentials: 'include',\r\n    });\r\n    if (response.ok) {\r\n      setRedirect(true);\r\n    }\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Navigate to={'/'} />\r\n  }\r\n\r\n  return (\r\n  <div className='post-container'>\r\n     <h2>Crea tu Artículo</h2>\r\n    <form className=\"post-form\" onSubmit={createNewPost}>\r\n      <div className=\"post-inputs\">\r\n      <input type=\"title\"\r\n             placeholder={'Título'}\r\n             value={title}\r\n             onChange={ev => setTitle(ev.target.value)} />\r\n      <input type=\"summary\"\r\n             placeholder={'Subtítulo'}\r\n             value={summary}\r\n             onChange={ev => setSummary(ev.target.value)} />\r\n      <div className=\"post-selectors\">\r\n        <input type=\"file\"\r\n              onChange={ev => setFiles(ev.target.files)} />\r\n          <div className='select-box'>\r\n            <p>Lenguaje</p>\r\n            <select value={icon} onChange={handleChangeLanguague}>\r\n                <option value=\"Unity\">Unity</option>\r\n                <option value=\"Csharp\">C#</option>\r\n            </select>\r\n          </div>\r\n      </div>\r\n    </div>\r\n      <EditorToolbar/>\r\n      <ReactQuill theme='snow' value={content} onChange={newValue => setContent(newValue)} modules={modules} formats={formats} cols=\"40\" rows=\"5\" style={{'marginBotton':`1rem`, 'width':'100%'}}/>\r\n      <div style={{'paddingTop':`1rem`}}>\r\n        <Button text='Create Post' />\r\n      </div>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst variantStyles = {\r\n  primary: {\r\n    background: '#fdcb6e',\r\n    borderColor: '#fdcb6e',\r\n    backgroundDisabled: '#ffffff',\r\n    colorDisabled: '#fdcb6e',\r\n    backgroundHover: '#ffeaa7',\r\n    backgroundColorHover: '#fdcb6e',\r\n    color: '#ffffff',\r\n  },\r\n  secondary: {\r\n    background: '#ffffff',\r\n    borderColor: '#6c5ce7',\r\n    backgroundDisabled: '#9B9B9B',\r\n    backgroundHover: '#a29bfe',\r\n    color: '#6c5ce7',\r\n    backgroundColorHover:'#ffffff',\r\n    colorDisabled: '#ffffff',\r\n  },\r\n};\r\n\r\n\r\nconst ButtonStyle = styled.button`\r\n  background-color: ${(props) => variantStyles[props.variant].background};\r\n  border-radius: 0.5rem;\r\n  border: 1px solid ${(props) => variantStyles[props.variant].borderColor};\r\n  cursor: ${(props) => props.disabled ? 'default' : 'pointer'};\r\n  color: ${(props) => variantStyles[props.variant].color};\r\n  padding: ${(props) => props.size === 'big' ? '1.2rem 2rem' : props.size === 'medium' ?  '1.5rem 1.5rem' : '1rem 1.2rem'};\r\n  font-size: 1rem;\r\n  border-radius: 0.5rem;\r\n  font-weight: bold;\r\n  transition: background-color 0.25s ease-out;\r\n  &:active {\r\n    background-color: ${(props) => variantStyles[props.variant].backgroundHover};\r\n    color: ${(props) => variantStyles[props.variant].backgroundColorHover};\r\n  }\r\n  &:hover {\r\n    background-color: ${(props) => variantStyles[props.variant].backgroundHover};\r\n    color: ${(props) => variantStyles[props.variant].backgroundColorHover};\r\n  }\r\n  &:disabled {\r\n    background-color: ${(props) => variantStyles[props.variant].backgroundDisabled};\r\n    color: ${(props) => variantStyles[props.variant].colorDisabled};\r\n  }\r\n  @media (min-width: 720px) {\r\n    font-size: ${(props) => props.textSizee === 'big' ? '2.3rem' : props.textSize === 'medium' ?  '1.8rem' : '1.6rem'};\r\n  }\r\n`;\r\n\r\nconst Button = ({ text, variant,onClick, disabled,size,textSize,path}) => {\r\n\r\n  const navigate = useNavigate()\r\n  const onAction = () => {\r\n    if (path !== undefined) {\r\n      navigate(path);\r\n    } else {\r\n      onClick();\r\n    }\r\n  };\r\n\r\n  return (\r\n  <div>\r\n    <ButtonStyle\r\n      onClick={onAction}\r\n      disabled={disabled}\r\n      size ={size}\r\n      textSize={textSize}\r\n      variant={variant}\r\n      path\r\n    >\r\n      {text}\r\n    </ButtonStyle>\r\n  </div>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  variant: PropTypes.oneOf(['primary', 'secondary']),\r\n  isDisabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nButton.defaultProps = {\r\n  onClick: () => {},\r\n  isDisabled: false,\r\n  variant: 'primary',\r\n};\r\n\r\nexport default Button;"],"names":["CustomUndo","_jsxs","viewBox","children","_jsx","className","points","d","CustomRedo","Size","Quill","whitelist","Font","modules","toolbar","container","handlers","undo","this","quill","history","redo","delay","maxStack","userOnly","formats","id","defaultValue","value","CreatePost","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","summary","setSummary","_useState5","_useState6","content","setContent","_useState7","_useState8","files","setFiles","_useState9","_useState10","icon","setIcon","_useState11","_useState12","redirect","setRedirect","_createNewPost","_asyncToGenerator","_regeneratorRuntime","mark","_callee","ev","data","wrap","_context","prev","next","FormData","set","preventDefault","fetch","method","body","credentials","sent","ok","stop","apply","arguments","Navigate","to","onSubmit","_x","type","placeholder","onChange","target","event","EditorToolbar","ReactQuill","theme","newValue","cols","rows","style","Button","text","variantStyles","primary","background","borderColor","backgroundDisabled","colorDisabled","backgroundHover","backgroundColorHover","color","secondary","ButtonStyle","styled","_templateObject","_taggedTemplateLiteral","props","variant","disabled","size","textSizee","textSize","_ref","onClick","path","navigate","useNavigate","undefined","defaultProps","isDisabled"],"sourceRoot":""}